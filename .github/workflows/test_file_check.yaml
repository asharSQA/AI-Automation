name: Test File Check & Cypress Parallel Execution

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-test-files:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Check for test files
        id: check-tests
        run: |
          # Ensure we have the base branch
          git fetch origin ${{ github.base_ref }}

          echo "Checking PR #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}"
          echo "Base ref: ${{ github.base_ref }}"
          echo "Base SHA: ${{ github.event.pull_request.base.sha }}"
          echo "Head SHA: ${{ github.event.pull_request.head.sha }}"

          # Get merge base commit
          MERGE_BASE=$(git merge-base origin/${{ github.base_ref }} HEAD)
          echo "Merge base: $MERGE_BASE"

          # Get list of modified files using merge-base
          FILES=$(git diff --name-only $MERGE_BASE HEAD)

          # Count total modified files (excluding empty lines and workflow files)
          TOTAL_FILES=$(echo "$FILES" | grep -v '^$' | grep -v '^\.github/workflows/' | wc -l)
          echo "Total modified files: $TOTAL_FILES"

          # Find test files (excluding workflow files and including proper test patterns)
          TEST_FILES=$(echo "$FILES" | grep -iE '(__tests__/|\.test\.|\.spec\.|/tests/)' || true)
          TEST_COUNT=$(echo "$TEST_FILES" | grep -v '^$' | wc -l || echo "0")

          echo "----------------------------------------"
          echo "Modified files:"
          echo "$FILES"
          echo "----------------------------------------"
          echo "Test files found ($TEST_COUNT):"
          echo "$TEST_FILES"

          if [ $TEST_COUNT -eq 0 ]; then
            echo "No test files found ❌"
            echo "has_tests=false" >> $GITHUB_OUTPUT
          else
            echo "Test files found ✅"
            echo "has_tests=true" >> $GITHUB_OUTPUT
          fi

      - name: Comment on PR
        if: steps.check-tests.outputs.has_tests == 'false'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body: `### ⚠️ No Test Files Detected

                This PR doesn't appear to include any test files. Please consider adding tests for your changes.

                cc: @team-leads`
              });
            } catch (error) {
              console.log('Error posting comment:', error);
              throw error;
            }

  run-primary-cypress-tests:
    runs-on: ubuntu-latest
    needs: check-test-files
    if: ${{ always() }} # Run this job even if the previous job fails
    strategy:
      fail-fast: false
      matrix:
        group:
          - id: 1
            specs: "cypress/e2e/duringCallWorkFlows.cy.js,cypress/e2e/customScenarioNotification.cy.js"
          - id: 2
            specs: "cypress/e2e/basicSetting.cy.js,cypress/e2e/loginSessionPersistence.cy.js"
          - id: 3
            specs: "cypress/e2e/notifications.cy.js,cypress/e2e/login.cy.js"
          - id: 4
            specs: "cypress/e2e/smartCallAnalysis.cy.js,cypress/e2e/register.cy.js,cypress/e2e/forgotPassword.cy.js,cypress/e2e/logout.cy.js,cypress/e2e/twilioCall.cy.js,cypress/e2e/loginNovi.cy.js,cypress/e2e/noviCall.cy.js"
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # Install mochawesome reporter
      - name: Install Mochawesome reporter
        run: yarn add mochawesome mochawesome-merge mochawesome-report-generator --ignore-engines

      # Verify Cypress configuration exists
      - name: Verify Cypress config
        id: verify-config
        run: |
          if [ -f "cypress.config.js" ]; then
            echo "Found Cypress config in root directory"
            echo "config_path=." >> $GITHUB_OUTPUT
          else
            echo "No Cypress configuration found. Searching for any cypress.json or cypress.config.js files..."
            find . -name "cypress.config.js" -o -name "cypress.json"
            echo "config_path=not_found" >> $GITHUB_OUTPUT
            exit 1  # Fail if no config found
          fi

      - name: Ensure Cypress is installed
        run: yarn add cypress --dev

      - name: Install Chrome & dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libgtk-3-0 libgbm-dev libnss3 libasound2t64 libxss1 libxrandr2 xdg-utils
          npx cypress install

      - name: Run Cypress Tests - Group ${{ matrix.group.id }}
        run: |
          echo "Running Cypress tests for specs: ${{ matrix.group.specs }}"
          xvfb-run -a npx cypress run --spec "${{ matrix.group.specs }}" --reporter mochawesome --reporter-options reportDir=cypress/reports,overwrite=false,html=false,json=true

      - name: Merge and Generate Final Report
        if: always()
        run: |
          yarn merge:reports
          yarn create:html

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-reports-${{ matrix.group.id }}
          path: |
            cypress/reports/**
            cypress/screenshots/**
            cypress/videos/**

  run-update-password-test:
    needs: run-primary-cypress-tests  # This makes it wait for all primary tests
    if: ${{ always() }} # Run this job even if the previous job fails
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install Mochawesome reporter
        run: yarn add mochawesome mochawesome-merge mochawesome-report-generator --ignore-engines

      - name: Ensure Cypress is installed
        run: yarn add cypress --dev

      - name: Install Chrome & dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libgtk-3-0 libgbm-dev libnss3 libasound2t64 libxss1 libxrandr2 xdg-utils
          npx cypress install

      - name: Run Update Password Test
        run: |
          echo "Running Update Password test"
          xvfb-run -a npx cypress run --spec "cypress/e2e/updatePassword.cy.js" --reporter mochawesome --reporter-options reportDir=cypress/reports,overwrite=false,html=false,json=true

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-reports-update-password
          path: |
            cypress/reports/**
            cypress/screenshots/**
            cypress/videos/**